/* bp: 650px / 975px / 1280px / max: don't care anymore  */
/* col: 1    /  2-3  /   4    /  maintain 4, add margin*/
/* Width between 650px - 975px 2 */
/* Width between 976px - 1280px 3 */
/* Width 1280px above 4 */
/* Max-width for each column: 300px */

/* IE, my lord, you are so amazing! */
/* Keep product-content in center */
.content {
  align-items: center;
  padding-top: 2em;

  @media screen and (min-width: 800px) {
    padding-top: 0;
  }

  @supports (display: grid) {
    padding-top: 2em;
  }

  display: flex;
  flex-direction: column;
  min-height: 70vh;

  .emptyCategoryMessage {
    width: 100%;
    margin: auto;
    text-align: center;
  }
}

/* Cut extra unknown white space on IE */
main {
  overflow: hidden;

  @supports (display: grid) {
    overflow: unset;
  }
}

.product .product__count::after {
  content: " st i lager";
}

/* mobile  */
.product-container {
  display: -ms-grid;
  -ms-grid-columns: 300px;
  margin: 0 auto;
  overflow: hidden;

  .grid-box {
    margin-bottom: 20px;
    overflow: hidden;

    @supports (display: grid) {
      margin-bottom: 0;
    }

    /* In the beginning, the plan is to set these two grids template-rows as 3fr 2fr
    But something changes later, however these names kept, so please don't get too confused */
    .grid-3 {
      background-size: cover;
      height: 250px;
    }

    .grid-2 {
      align-items: center;

      .product__title {
        width: 100%;
      }

      .product__count-container {
        width: 155px;
        justify-content: space-around;
        align-items: center;
        // display: flex;
        // justify-content: center;
      }

      .product__price {
        // text-align: center;
      }
    }
  }
}

$elements: 12;

@for $i from 1 to $elements {
  .product-container> :nth-child(#{$i }) {
    -ms-grid-row: $i + $i -1 !important;
  }
}

/* Width between 650px - 975px 2 */
@media screen and (max-width: 975px) and (min-width: 650px) {
  .product-container {
    -ms-grid-columns: 300px 2em 300px;
    margin: 0 auto;
  }

  $elements: 12;

  @for $i from 1 to $elements {
    .product-container> :nth-child(#{$i*2 - 1}) {
      -ms-grid-row: $i !important;
      -ms-grid-column: 1 !important;
    }

    .product-container> :nth-child(#{$i*2}) {
      -ms-grid-row: $i !important;
      -ms-grid-column: 3 !important;
    }
  }
}

/* Width between 976px - 1280px 3 */
@media screen and (max-width: 1360px) and (min-width: 976px) {
  .product-container {
    -ms-grid-columns: 300px 2rem 300px 2rem 300px;
    margin: 0 auto;
  }

  $elements: 12;

  @for $i from 0 to $elements {

    /* 1/4/7/10/.. */
    .product-container> :nth-child(#{$i*3 + 1}) {
      -ms-grid-row: $i + 1 !important;
      -ms-grid-column: 1 !important;
    }

    /* 2/5/8/11/... */
    .product-container> :nth-child(#{$i*3 + 2}) {
      -ms-grid-row: $i + 1 !important;
      -ms-grid-column: 3 !important;
    }

    /* 3/6/9/12/... */
    .product-container> :nth-child(#{$i*3 + 3}) {
      -ms-grid-row: $i + 1 !important;
      -ms-grid-column: 5 !important;
    }
  }
}

/* When screen's width > 1280, 4 col */
@media screen and (min-width: 1360px) {
  .product-container {
    -ms-grid-columns: 300px 3rem 300px 3rem 300px 3rem 300px; //control max-width of each card
    margin: 0 auto;
  }

  $elements: 12;

  @for $i from 0 to $elements {
    .product-container> :nth-child(#{$i*4 + 1}) {
      -ms-grid-row: $i + 1 !important;
      -ms-grid-column: 1 !important;
    }

    .product-container> :nth-child(#{$i*4 + 2}) {
      -ms-grid-row: $i + 1 !important;
      -ms-grid-column: 3 !important;
    }

    .product-container> :nth-child(#{$i*4 + 3}) {
      -ms-grid-row: $i + 1 !important;
      -ms-grid-column: 5 !important;
    }

    .product-container> :nth-child(#{$i*4 + 4}) {
      -ms-grid-row: $i + 1 !important;
      -ms-grid-column: 7 !important;
    }
  }
}

/* IE part ends here, but legend continues. */

/* Here comes code for other browsers */
@supports (display: grid) {
  .product-container {
    display: grid;
    grid-row-gap: 2em;
    justify-items: center;
    grid-template-columns: 300px;

    @media screen and (min-width: 680px) {
      grid-template-columns: repeat(2, 300px);
      grid-column-gap: calc((100vw - 680px) / 2);
    }

    @media screen and (min-width: 1012px) {
      grid-template-columns: repeat(3, 300px);
      grid-column-gap: calc((100vw - 964px) / 3);
    }

    @media screen and (min-width: 1321px) {
      grid-template-columns: repeat(4, 300px);
      grid-column-gap: 20px;
    }
  }
}

div.product>div:nth-child(2)>button:nth-child(4) {
  z-index: 0 !important;
}

.product {
  display: flex;
  justify-content: space-between;
  border: 1px solid lightgray;
  border-radius: 4px;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.05);
  flex-direction: column;
  align-items: center;

  &__title {
    text-align: center;
    margin: 0 8px 0 8px;
  }

  &__count-container {
    display: flex;
  }

  &__add-btn {
    margin: 5px auto;
  }
}

/* Set each product cart to display grid */
.grid-box {
  display: -ms-grid;
  display: grid;
  -ms-grid-columns: 1fr;
  grid-template-rows: 250px 150px;
  grid-template-columns: 1fr;
  width: 300px;

  .grid-3 {
    -ms-grid-row: 1;
    -ms-grid-column: 1;
    width: 100%;
    height: 100%;
    background-size: cover;
  }

  .grid-2 {
    -ms-grid-row: 2;
    -ms-grid-column: 1;
    display: -ms-flexbox;
    flex-direction: column;
    justify-content: center;

    .product__title {
      font-size: 14px;
    }

    .product__count-btn {
      display: inline-block;
      height: 30px;
      padding: 0 10px;
      margin: 0;
      border-radius: 50%;
      border: 1px solid white;

      &:nth-of-type(2) {
        background-color: $green;

        &:hover {
          background-color: $green-light;
        }
      }
    }

    @supports (display: grid) {
      display: grid;
      justify-items: center;
      // align-self: flex-end;
      grid-template-rows: 0.8fr min-content 0.5fr 1fr;

      .product__count-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: 35px;
        width: 100px;

        .product__count {
          display: inline-block;
          text-align: center;
        }
      }

      .product__price {
        height: 30px;
      }
    }
  }
}

div.product>div>button:nth-child(4) {
  padding: 5px 15px;
}

/* Button animation code */
.ctrl-standard.fx-bubbleUp {
  color: $green;
  border-color: $green;
}

.ctrl-standard.fx-bubbleUp::after {
  top: auto;
  border-radius: 50% 50% 0 0/75% 75% 0 0;
  background: $green;
}

.ctrl-standard.fx-bubbleUp.is-reversed::after {
  height: 300%;
}

.ctrl-standard.fx-bubbleUp.is-reversed:hover {
  color: $green;
}

.ctrl-standard.fx-bubbleUp.is-reversed:hover::after {
  height: 0;
}

.ctrl-standard.fx-sliderIn.is-reversed:hover::after {
  width: 0;
}

[class*="ctrl-"] {
  padding: 5ox 10px;
  border-radius: 2px;
  border: 1px solid #231f20;
}

[class*="ctrl-"][class*="fx-"]:hover,
[class*="ctrl-"][class*="fx-"].active {
  color: #231f20;
}

[class*="ctrl-"][class*="fx-"].is-reversed {
  color: #231f20;
}

[class*="fx-"],
[class*="fx-"]:hover {
  transition: color 0.5s ease-in-out;
}

[class*="fx-"]:not(.fx-dyna) {
  position: relative;
  z-index: 1;
  transition-delay: 0.2s !important;
  overflow: hidden;
}

[class*="fx-"]:not(.fx-dyna)::after,
[class*="fx-"]:not(.fx-dyna)::before {
  content: "";
  display: block;
  position: absolute;
  z-index: -1;
}

[class*="fx-bubble"]::after {
  transition: height 0.5s ease-in-out;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  height: 0;
  width: 100%;
}

[class*="fx-bubble"]:hover::after,
[class*="fx-bubble"].active::after {
  transition: height 0.5s ease-in-out;
  height: 300%;
}

[class*="fx-bubble"]:disabled:hover::after {
  height: 0;
}

.fx-sliderIn::after {
  transition: width 0.5s ease-in-out;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  width: 0;
}

.fx-sliderIn:hover::after,
.fx-sliderIn.active::after {
  transition: width 0.5s ease-in-out;
  width: 100%;
}

:checked+.fx-sliderIn::after,
.fx-sliderIn.active::after {
  width: 300%;
}

/* Testing code, for adding status indicator */
.product {
  position: relative;

  &::before {
    content: url('../img/svg/cart.svg');
    position: absolute;
    width: 12%;
    top: 88%;
    left: 8%;
  }

  &.oldProduct::before {
    // content: url('../img/svg/price-tag.svg');
    // top: 0;
    // left: 0;
    // rotate: -85deg;
    position: absolute;
    width: 16%;
    top: 15px;
    left: 84%;
    content: "-10%";
    border: 1px solid red;
    text-align: center;
    background-color: #ff0000c4;
    color: white;
    border-radius: 2px;
    font-size: 15px;
  }

  &.newProduct::before{
    position: absolute;
    width: 16%;
    top: 15px;
    left: 84%;
    content: "NYTT";
    border: 1px solid $green;
    text-align: center;
    background-color: $green;
    color: white;
    border-radius: 2px;
    font-size: 15px;
  }
}